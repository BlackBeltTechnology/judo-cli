version: 2

project_name: judo

env:
  - CGO_ENABLED=0

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - id: judo
    binary: judo
    main: ./cmd/judo
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: windows
        goarch: arm64

archives:
  - id: judo-archive
    format: tar.gz
    # Use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - README.adoc
      - LICENSE

checksum:
  name_template: "checksums.txt"

snapshot:
  version_template: "{{ .Version }}-snapshot-{{ .Timestamp }}"

# RELEASE_NOTES.md generation will be handled in GitHub Actions workflow
# using GoReleaser's changelog functionality

changelog:
  use: git
  sort: asc
  filters:
    exclude:
      - "^docs:" # exclude documentation changes
      - "^test:" # exclude test changes
      - "^chore:" # exclude chores
  format: |
    {{- $previous := .Env.GORELEASER_PREVIOUS_TAG }}
    {{- if $previous }}
    ## [{{ .Tag }}] - {{ .Date }}
    Previous stable tag: {{ $previous }}
    {{ else }}
    # Changelog
    Initial release - {{ .Date }}
    {{ end }}

    Version: {{ .Major }}.{{ .Minor }}.{{ .Patch }}{{ if (contains .Tag "-") }} - Pre-release{{ end }}

    {{- if .Entries }}
    {{ range .Entries }}
    ---
    * {{ .Title }}
    {{- if .Body }}
    {{ .Body }}
    {{- end }}
    {{ if .Author.Name }} ({{ .Author.Name }}){{ end }}
    {{ end }}
    ---
    {{ else }}
    _No commits found between tags._
    {{ end }}

release:
  # Repository to release to.
  github:
    owner: BlackBeltTechnology
    name: judo-cli

  # Create the release draft, so it can be edited before being published.
  draft: false
  prerelease: auto

  # Controls whether to delete pre-existing releases with the same tag.
  replace_existing_draft: true

  # Allow overwriting existing releases and assets
  mode: replace

  # You can change the name of the release.
  name_template: "{{.ProjectName}} v{{.Version}}"

  # Release footer template.
  footer: |
    ## JUDO CLI {{ .Tag }}

    **Full Changelog**: https://github.com/BlackBeltTechnology/judo-cli/compare/{{ .PreviousTag }}...{{ .Tag }}

    ---

    **Installation**

    ### Homebrew (macOS/Linux)
    ```bash
    brew install blackbelttechnology/tap/judo
    ```

    ### Manual Installation
    Download the appropriate binary for your platform from the assets below:

    #### Linux (x86_64)
    ```bash
    # Using curl
    curl -L https://github.com/BlackBeltTechnology/judo-cli/releases/latest/download/judo_Linux_x86_64.tar.gz | tar xz
    sudo mv judo /usr/local/bin/

    # Using wget
    wget https://github.com/BlackBeltTechnology/judo-cli/releases/latest/download/judo_Linux_x86_64.tar.gz
    tar xzf judo_Linux_x86_64.tar.gz
    sudo mv judo /usr/local/bin/
    ```

    #### Linux (ARM64)
    ```bash
    curl -L https://github.com/BlackBeltTechnology/judo-cli/releases/latest/download/judo_Linux_arm64.tar.gz | tar xz
    sudo mv judo /usr/local/bin/
    ```

    #### macOS (Intel)
    ```bash
    curl -L https://github.com/BlackBeltTechnology/judo-cli/releases/latest/download/judo_Darwin_x86_64.tar.gz | tar xz
    sudo mv judo /usr/local/bin/
    ```

    #### macOS (Apple Silicon)
    ```bash
    curl -L https://github.com/BlackBeltTechnology/judo-cli/releases/latest/download/judo_Darwin_arm64.tar.gz | tar xz
    sudo mv judo /usr/local/bin/
    ```

    #### Windows (x86_64)
    ```powershell
    # Using PowerShell
    Invoke-WebRequest -Uri "https://github.com/BlackBeltTechnology/judo-cli/releases/latest/download/judo_Windows_x86_64.zip" -OutFile "judo.zip"
    Expand-Archive judo.zip -DestinationPath .
    # Move judo.exe to a directory in your PATH
    ```

brews:
  - name: judo
    repository:
      owner: BlackBeltTechnology
      name: homebrew-tap
      branch: main
      token: "{{ .Env.HOMEBREW_TAP_TOKEN }}"
    url_template: "https://github.com/BlackBeltTechnology/judo-cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    commit_author:
      name: blackbelt-bot
      email: bot@blackbelt.hu
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    homepage: "https://github.com/BlackBeltTechnology/judo-cli"
    description: "JUDO CLI - A command-line tool for managing the lifecycle of JUDO applications"
    license: "EPL-2.0"
    skip_upload: auto
    dependencies:
      - name: docker
        type: optional
      - name: maven
        type: optional
    install: |
      bin.install "judo"
    test: |
      system "#{bin}/judo", "version"

# Announce the release
announce:
  skip: "{{gt .Patch 0}}"
