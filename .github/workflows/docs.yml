name: Deploy Documentation

on:
  push:
    branches: 
      - develop
      - main
    paths:
      - 'docs/**'
      - '_docs/**'
      - '_config.yml'
      - 'docs/index.md'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: false

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Create Gemfile for CI
        run: |
          cd docs
          cat > Gemfile << 'EOF'
          source "https://rubygems.org"
          
          gem "jekyll", "~> 4.3"
          gem "webrick"
          
          # Theme dependencies
          gem "kramdown-parser-gfm"
          gem "rouge", "~> 4.0"
          gem "jekyll-sass-converter"
          
          group :jekyll_plugins do
            gem "jekyll-remote-theme"
            gem "jekyll-feed"
            gem "jekyll-sitemap" 
            gem "jekyll-seo-tag"
          end
          EOF

      - name: Install dependencies
        run: |
          cd docs
          rm -f Gemfile.lock
          bundle install

      - name: Build with Jekyll
        run: |
          cd docs
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Copy install scripts to site
        run: |
          mkdir -p docs/_site
          cp ../scripts/install.sh docs/_site/
          cp ../scripts/install.ps1 docs/_site/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4