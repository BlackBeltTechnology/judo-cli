name: Release

on:
  push:
    tags:
      - 'v*' # Push events to tags like v1.0.0

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Validate tag format
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          if [[ ! "$TAG_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Tag must follow semantic versioning format (v1.2.3)"
            exit 1
          fi
          echo "Valid tag format: $TAG_NAME"

      - name: Extract version from tag
        id: tag_version
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          VERSION="${TAG_NAME#v}"
          echo "tag=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Update VERSION file and commit
        run: |
          chmod +x scripts/version.sh
          scripts/version.sh set ${{ steps.tag_version.outputs.version }}
          
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Commit the version change
          git add VERSION
          git commit -m "chore: update version to ${{ steps.tag_version.outputs.version }} for release"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  post-release:
    name: Post-Release Version Increment
    runs-on: ubuntu-latest
    needs: release
    if: success()
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Extract current version from tag
        id: current_version
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          VERSION="${TAG_NAME#v}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Increment version for next development cycle
        id: next_version
        run: |
          chmod +x scripts/version.sh
          # Set the current released version first
          scripts/version.sh set ${{ steps.current_version.outputs.version }}
          # Then increment patch version for next development cycle
          NEXT_VERSION=$(scripts/version.sh increment patch --commit)
          echo "next_version=${NEXT_VERSION}" >> $GITHUB_OUTPUT

      - name: Push version increment to develop
        run: |
          git push origin develop
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create summary
        run: |
          echo "## Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Released version: ${{ steps.current_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Next development version: ${{ steps.next_version.outputs.next_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Updated develop branch with incremented version" >> $GITHUB_STEP_SUMMARY
